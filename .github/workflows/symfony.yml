name: Symfony Deploy

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  symfony:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./SymfonyBackFront
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check php version
        run: php -v
      - name: Showing working directory
        run: pwd && ls
      # Composer
      - name: Validate composer.json and composer.lock
        run: composer validate --no-check-publish
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          working-directory: ./SymfonyBackFront
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
        # Prepare .env file for production
      - name: Make production envfile
        uses: SpicyPizza/create-envfile@v1
        with:
          working-directory: ./SymfonyBackFront
          envkey_APP_ENV: prod
          envkey_APP_DEBUG: false
          envkey_APP_SECRET: ${{ secrets.APP_SECRET }}
          envkey_APP_DATABASE_URL: ${{ secrets.STEPPOST_MYSQL_DB }}
          file_name: .env
      # Copying files and artifacts via SSH
      - name: Copying files to server
        uses: appleboy/scp-action@master
        with:
          working-directory: ./SymfonyBackFront
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          passphrase: ""
          rm: true
          source: "./"
          target: ${{ secrets.REMOTE_TARGET }}
      # Run commands on production
      - name: Executing remote ssh commands
        uses: appleboy/ssh-action@master
        with:
          working-directory: ./SymfonyBackFront
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          passphrase: ""
          script: rsync -a --exclude={'var','temp'} --delete ${{ secrets.REMOTE_TARGET }} ${{ secrets.REMOTE_TARGET_DEPLOY }}
